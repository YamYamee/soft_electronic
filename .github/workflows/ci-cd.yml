name: Fast CI/CD

on:
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: [self-hosted, runner]
    steps:
      - name: 체크아웃
        uses: actions/checkout@v4

      - name: 빠른 배포
        run: |
          echo "🚀 초고속 배포 시작"

          # 디스크 공간 확인 및 정리
          echo "디스크 공간 확인..."
          df -h
          
          # Docker 정리 (공간 확보)
          echo "Docker 정리 중..."
          docker system prune -f 2>/dev/null || true
          docker image prune -f 2>/dev/null || true

          # Docker 확인 및 대안 실행
          if command -v docker &> /dev/null; then
            echo "Docker 사용 가능 - 컨테이너 배포"
            
            # 기존 컨테이너 정리
            docker compose down 2>/dev/null || true
            
            # 경량 빌드 (캐시 사용)
            docker build -t posture-app:latest . || exit 1
            
            # 컨테이너 시작
            docker compose up -d
          else
            echo "Docker 없음 - Python 직접 실행"
            
            # Python 환경 설정
            python3 -m pip install --upgrade pip
            pip3 install -r requirements-minimal.txt
            
            # 기존 프로세스 종료
            pkill -f "python.*websocket_server.py" || true
            
            # 백그라운드에서 서버 실행
            nohup python3 websocket_server.py > server.log 2>&1 &
            
            echo "서버 시작 중..."
            sleep 5
          fi

          # 헬스체크
          sleep 10
          curl -f http://localhost:8000/health || echo "헬스체크 실패했지만 계속 진행"

          echo "✅ 배포 완료! http://localhost:8000"
